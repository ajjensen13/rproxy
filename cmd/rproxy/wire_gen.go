// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"context"
	"github.com/ajjensen13/gke"
	"net"
	"net/http"
)

// Injectors from wire.go:

func newLogger(ctx context.Context) (*gke.Logger, func()) {
	logClient, cleanup := provideLogClient(ctx)
	string2 := _wireStringValue
	logger, cleanup2 := provideLogger(logClient, string2)
	return logger, func() {
		cleanup2()
		cleanup()
	}
}

var (
	_wireStringValue = "rproxy"
)

func newListener(ctx context.Context, l *gke.Logger) (net.Listener, func()) {
	config := provideConfig(l)
	client, cleanup := provideStorageClient(ctx, l)
	bucketHandle := provideBucketHandle(l, config, client)
	cache := provideAutocertCache(l, bucketHandle)
	v := provideDomains(l, config)
	listener := provideListener(l, cache, v)
	return listener, func() {
		cleanup()
	}
}

func newServer(ctx context.Context, l *gke.Logger) *http.Server {
	config := provideConfig(l)
	handler := provideHandler(l, config)
	logger := provideErrorLogger(l)
	server := provideServer(l, handler, logger)
	return server
}
